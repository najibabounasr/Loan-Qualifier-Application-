# This question will ask the user whether or not they would like to save their qualifying loan data to a .csv file
import questionary
import fire
import csv
from pathlib import Path

from qualifier.utils.fileio import save_csv
# This data saves the 
def save_qualifying_loans(qualifying_loans):
    """Saves the qualifying loans to a CSV file.

    Args:
        qualifying_loans (list of lists): The qualifying bank loans.
    """
    if (len(qualifying_loans)) == 0 :
        print("As you do not qualify for any loans, a data sheet of qualified loans cannot be created. Program will close.")
    else :
        confirm_save = questionary.confirm("Would you like to save your qualifying loan data to a .csv file?").ask()
        if confirm_save == str('Yes') :
            confirm_save = True
        elif confirm_save == str('No'):
            confirm_save = False
        elif confirm_save == True :
            csvpath = Path('qualifying_loans.csv')
            save_csv(csvpath, qualifying_loans)
        elif confirm_save == False : 
            print("A datasheet was not created with your qualified loans. At your request. ")
        else : 
            print("Error, please try again")





    
def load_bank_data():
    """Ask for the file path to the latest banking data and load the CSV file.

    Returns:
        The bank data from the data rate sheet CSV file.
    """

    csvpath = questionary.text("Enter a file path to a rate-sheet (.csv):").ask()
    csvpath = Path(csvpath)
    if not csvpath.exists():
        sys.exit(f"Oops! Can't find this path: {csvpath}")

    return load_csv(csvpath)


def get_applicant_info():
    """Prompt dialog to get the applicant's financial information.

    Returns:
        Returns the applicant's financial information.
    """

    credit_score = questionary.text("What's your credit score?").ask()
    debt = questionary.text("What's your current amount of monthly debt?").ask()
    income = questionary.text("What's your total monthly income?").ask()
    loan_amount = questionary.text("What's your desired loan amount?").ask()
    home_value = questionary.text("What's your home value?").ask()

    credit_score = int(credit_score)
    debt = float(debt)
    income = float(income)
    loan_amount = float(loan_amount)
    home_value = float(home_value)

    return credit_score, debt, income, loan_amount, home_value
